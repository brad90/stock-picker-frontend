[{"/Users/stephen/career/stock-picker-app/client/src/index.js":"1","/Users/stephen/career/stock-picker-app/client/src/App.js":"2","/Users/stephen/career/stock-picker-app/client/src/reportWebVitals.js":"3","/Users/stephen/career/stock-picker-app/client/src/views/Home/Home.js":"4","/Users/stephen/career/stock-picker-app/client/src/views/CompanyInfo/CompanyInfo.js":"5","/Users/stephen/career/stock-picker-app/client/src/components/Search/SearchBasic.js":"6","/Users/stephen/career/stock-picker-app/client/src/components/InfoSection.js":"7","/Users/stephen/career/stock-picker-app/client/src/components/Charts/CurvedAreaChart.js":"8","/Users/stephen/career/stock-picker-app/client/src/components/Charts/BarChart.js":"9","/Users/stephen/career/stock-picker-app/client/src/components/Charts/LineChart.js":"10","/Users/stephen/career/stock-picker-app/client/src/common/apis/urls.js":"11"},{"size":801,"mtime":1616432291626,"results":"12","hashOfConfig":"13"},{"size":485,"mtime":1625765572820,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611493517245,"results":"15","hashOfConfig":"13"},{"size":1118,"mtime":1625766877086,"results":"16","hashOfConfig":"13"},{"size":649,"mtime":1625774805723,"results":"17","hashOfConfig":"13"},{"size":856,"mtime":1624995137663,"results":"18","hashOfConfig":"13"},{"size":2111,"mtime":1618766343337,"results":"19","hashOfConfig":"13"},{"size":1769,"mtime":1618763520460,"results":"20","hashOfConfig":"13"},{"size":1725,"mtime":1618764359018,"results":"21","hashOfConfig":"13"},{"size":1489,"mtime":1617822094213,"results":"22","hashOfConfig":"13"},{"size":0,"mtime":1625595984581,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1inml1h",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/stephen/career/stock-picker-app/client/src/index.js",[],["52","53"],"/Users/stephen/career/stock-picker-app/client/src/App.js",[],"/Users/stephen/career/stock-picker-app/client/src/reportWebVitals.js",[],"/Users/stephen/career/stock-picker-app/client/src/views/Home/Home.js",[],"/Users/stephen/career/stock-picker-app/client/src/views/CompanyInfo/CompanyInfo.js",["54","55","56","57","58"],"/Users/stephen/career/stock-picker-app/client/src/components/Search/SearchBasic.js",["59","60","61"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./styles.scss\";\n\nconst SearchBasic = ({ placeholder, handleSearch }) => {\n\tconst [search, setSearch] = useState(null);\n\n\tconst onSearch = () => {\n\t\thandleSearch(search.toLowerCase());\n\t};\n\n\tconst onFocus = (e) => {\n\t\te.target.setAttribute(\"autocomplete\", \"off\");\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input className='input' type='text' name='basicSearch' placeholder={placeholder} onChange={(e) => setSearch(e.target.value)} onFocus={(e) => onFocus(e)} />\n\t\t\t<a onClick={() => onSearch()}>\n\t\t\t\t<FontAwesomeIcon icon={faSearch} style={{ marginLeft: \"-3rem\", color: \"white\" }} />\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default SearchBasic;\n","/Users/stephen/career/stock-picker-app/client/src/components/InfoSection.js",[],["62","63"],"/Users/stephen/career/stock-picker-app/client/src/components/Charts/CurvedAreaChart.js",["64","65"],"import React, { useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\n\nconst CurvedAreaChart = (props) => {\n\n     const [chartSeries, setChartSeries] = useState([])\n\n\n     const [chartOptions, setChartOptions] = useState({\n               chart: {\n                    height: 350,\n                    type: 'area',\n                    toolbar: {\n                         show: false\n                    }\n               },\n               dataLabels: {\n                    enabled: false\n               },\n               stroke: {\n                    curve: 'smooth'\n          },\n          fill: {\n               type: \"gradient\",\n               gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.7,\n                    opacityTo: 0.9,\n                    stops: [0, 90, 100]\n               }\n          },\n               xaxis: {\n                    type: 'Year',\n                    categories: ['2016', '2017', '2018', '2019', '2020' ]\n               },\n               yaxis: {\n                    show: true,\n                    labels: {\n                         formatter: function(value) {\n                         return (value/1000000 + \"m\")\n                         }\n                    }\n               },\n                tooltip: {\n                    enabled: true,\n                    x: {\n                         show: false,\n                     },\n                     marker: {\n                         show: false,\n                    },\n          },\n                \n \n     })\n\n     useEffect(() => {\n          setChartSeries(props.series)\n     });\n\n return (\n  <Chart\n    options={chartOptions}\n    series={chartSeries}\n    type=\"area\"\n    width=\"500\"\n   />\n )\n}\n\nexport default CurvedAreaChart","/Users/stephen/career/stock-picker-app/client/src/components/Charts/BarChart.js",["66","67"],"import React, { useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\n\nconst BarChart = (props) => {\n\n     const [chartSeries, setChartSeries] = useState([])\n\n\n     const [chartOptions, setChartOptions] = useState({\n               chart: {\n               height: '100%',\n                    width: '100%',\n                    type: 'bar',\n                    toolbar: {\n                         show: false\n                    }\n               },\n               dataLabels: {\n                    enabled: false\n               },\n               stroke: {\n                    curve: 'smooth'\n          },\n               responsive: [{\n               breakpoint: 2000,\n                    options: {\n                         width: '100%',\n                         height: '100%',\n               },\n               }],\n               xaxis: {\n                    type: 'Year',\n                    categories: ['2016', '2017', '2018', '2019', '2020' ]\n               },\n               yaxis: {\n                    show: true,\n                    labels: {\n                         formatter: function(value) {\n                         return (value/1000000 + \"m\")\n                         }\n                    }\n               },\n                tooltip: {\n                    enabled: true,\n                    x: {\n                         show: false,\n                     },\n                     marker: {\n                         show: false,\n                    },\n               },\n \n     })\n\n     useEffect(() => {\n          setChartSeries(props.series)\n     });\n\n return (\n  <Chart\n    options={chartOptions}\n    series={chartSeries}\n    type=\"bar\"\n    width=\"500\"\n   />\n )\n}\n\nexport default BarChart","/Users/stephen/career/stock-picker-app/client/src/components/Charts/LineChart.js",["68","69"],"import React, { useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\n\nconst LineChart = (props) => {\n\n     const [chartSeries, setChartSeries] = useState([])\n\n\n     const [chartOptions, setChartOptions] = useState({\n               chart: {\n                    height: 350,\n                    type: 'line',\n                    toolbar: {\n                         show: false\n                    }\n               },\n               dataLabels: {\n                    enabled: false\n               },\n               stroke: {\n                    curve: 'smooth'\n               },\n               xaxis: {\n                    type: 'Year',\n                    categories: ['2016', '2017', '2018', '2019', '2020' ]\n               },\n               yaxis: {\n                    show: true,\n                    labels: {\n                         formatter: function(value) {\n                         return (value/1000000 + \"m\")\n                         }\n                    }\n               },\n                tooltip: {\n                    enabled: true,\n                    x: {\n                         show: false,\n                     },\n                     marker: {\n                         show: false,\n                    },\n               },\n \n     })\n\n     useEffect(() => {\n          setChartSeries(props.series)\n     });\n\n return (\n  <Chart\n    options={chartOptions}\n    series={chartSeries}\n    type=\"line\"\n    width=\"500\"\n   />\n )\n}\n\nexport default LineChart","/Users/stephen/career/stock-picker-app/client/src/common/apis/urls.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"78","line":7,"column":9,"nodeType":"76","messageId":"77","endLine":7,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":8,"column":9,"nodeType":"76","messageId":"77","endLine":8,"endColumn":20},{"ruleId":"74","severity":1,"message":"80","line":8,"column":22,"nodeType":"76","messageId":"77","endLine":8,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":13,"column":5,"nodeType":"83","endLine":13,"endColumn":7,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"85","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"86","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":21,"column":4,"nodeType":"89","endLine":21,"endColumn":34},{"ruleId":"70","replacedBy":"90"},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","severity":1,"message":"92","line":9,"column":27,"nodeType":"76","messageId":"77","endLine":9,"endColumn":42},{"ruleId":"81","severity":1,"message":"93","line":57,"column":6,"nodeType":"76","endLine":57,"endColumn":15,"suggestions":"94"},{"ruleId":"74","severity":1,"message":"92","line":9,"column":27,"nodeType":"76","messageId":"77","endLine":9,"endColumn":42},{"ruleId":"81","severity":1,"message":"93","line":55,"column":6,"nodeType":"76","endLine":55,"endColumn":15,"suggestions":"95"},{"ruleId":"74","severity":1,"message":"92","line":9,"column":27,"nodeType":"76","messageId":"77","endLine":9,"endColumn":42},{"ruleId":"81","severity":1,"message":"93","line":47,"column":6,"nodeType":"76","endLine":47,"endColumn":15,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'API_URLS' is defined but never used.","Identifier","unusedVar","'ticker' is assigned a value but never used.","'companyInfo' is assigned a value but never used.","'setCompanyInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.ticker'. Either include it or remove the dependency array. If 'setTicker' needs the current value of 'props.match.params.ticker', you can also switch to useReducer instead of useState and read 'props.match.params.ticker' in the reducer.","ArrayExpression",["99"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["97"],["98"],"'setChartOptions' is assigned a value but never used.","React Hook useEffect contains a call to 'setChartSeries'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.series] as a second argument to the useEffect Hook.",["100"],["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},{"desc":"105","fix":"108"},"Update the dependencies array to be: [props.match.params.ticker]",{"range":"109","text":"110"},"Add dependencies array: [props.series]",{"range":"111","text":"112"},{"range":"113","text":"112"},{"range":"114","text":"112"},[362,364],"[props.match.params.ticker]",[1620,1620],", [props.series]",[1584,1584],[1346,1346]]